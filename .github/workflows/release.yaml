name: Release Docker Image

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string
  # 1.2 Define environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Docker image
        run: |
          make build
          pushed_image=ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}-arm64
          docker tag com.timecheck.device:latest-arm64 ${pushed_image}
          docker images
          # Push the image to the GitHub Container Registry
          docker push ${pushed_image}

      - name: Extract changelog
        id: changelog
        run: |
          # Extract changelog entry for this version if you have CHANGELOG.md
          # Or generate changelog from git commits
          CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          tag_name: ${{ steps.version.outputs.VERSION }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Docker Image
            ```
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
            ```

            ### For ARM64 (OrangePi Zero 3)
            ```
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}-arm64
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
